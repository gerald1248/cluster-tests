kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.name | quote }}
  namespace: {{ .Values.namespace | quote }}
  labels:
    app: {{ .Values.name | quote }}
spec:
  triggers:
  - type: ConfigChange
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Values.name | quote }}
  template:
    metadata:
      labels:
        app: {{ .Values.name | quote }}
    spec:
      serviceAccountname: {{ .Values.name | quote }}
      serviceAccount: {{ .Values.name | quote }}
      containers:
      - name: {{ .Values.name | quote }}
        image: gerald1248/cluster-tests:latest
        command: [ "cluster-tests" ]
        args: [ "-d={{ .Values.datadir }}", "-o={{ .Values.outputdir }}", "-i={{ .Values.interval_seconds }}", "-r={{ .Values.retain_days }}" ]
        resources:
          limits:
            cpu: 200m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        livenessProbe:
          exec:
            command:
            - date
          initialDelaySeconds: 20
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - date
          initialDelaySeconds: 20
          periodSeconds: 20
        env:
        - name: CLUSTER_TESTS_CONTEXT
          value: {{ .Values.host }}
        - name: POD_NAMESPACE
          value: {{ .Values.namespace | quote }}
        volumeMounts:
        - name: "{{ .Values.name }}-config-vol"
          mountPath: /app/{{ .Values.name }}.d
        - name: "{{ .Values.name }}-output-vol"
          mountPath: /app/output
      volumes:
      - name: "{{ .Values.name }}-config-vol"
        configMap:
          name: {{ .Values.name | quote }}
      - name: "{{ .Values.name }}-output-vol"
        persistentVolumeClaim:
          claimName: {{ .Values.name | quote }}
